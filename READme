FlexJS is a prototype of a new Flex framework that can be cross-compiled and produce an HTML/JS/CSS application that runs in any browser without Flash.

We have prototypes of a List, Button, Label, DropDownList, CheckBox, RadioButton, TextArea, and TextInput We have a prototype of a HTTPService and a LazyCollection 
The best way to get started is to follow the instructions from https://cwiki.apache.org/confluence/display/FLEX/Using+FlexJS+with+Adobe+Flash+Builder.  When you have completed the setup also complete the steps on that wiki page under "Creating a FlexJS Application".  It is currently easier to modify the existing application example than to create a new application from scratch.Building and Running/DebuggingAs you edit the code, the regular Flex compiler is compiling and reporting errors, but it only knows how to build Flex SWFs so the output SWF probably won't run.  So, before you debug, select the main MXML file in Package Explorer, choose from the Run menu the new External Tool: "FlexJS (Debug Build)".  This will run the Falcon compiler with the right options to generate a SWF in the bin-debug folder that overwrites the one that is there.  Then you should be able to set breakpoints and debug.Once you have your app working as a SWF, try the FalconJX External Tool.  It will output a debug version to bin/js-debug and a minified version to bin/js-release.   Run the index.html in any browser.  Some browsers may require that you deploy to a server otherwise the network calls won't work.I'm sure there will be lots of issues, but feel free to comment or contribute.  Remember, this is in its infancy so it will likely fall down easily and poop unexpectedly.

Using COMPC for Libraries

As before, COMPC is used for building SWCs.  If you don't have any MXML in your SWC, you can just use a regular Flex Library Project to create the SWC.  If you have MXML in the SWC, then you will need to use a "FlexJS (COMPC)" external tool.  Once you have a SWC, you can then try the "FlexJS (JS COMPC)" external tool to cross compile the SWC into a folder of JS files in folder called "js" in the project's folder.  These JS files are not packaged into a SWC or ZIP.

Then, to build an application using a library, you would include the SWC in your library path, and for the "FlexJS (FalconX É)" configuration, you add the SWC in the library-path and then add a -sdk-js-lib option that points to the "js" folder in the SWC project.
