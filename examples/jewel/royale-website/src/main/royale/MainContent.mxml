<?xml version="1.0" encoding="utf-8"?>
<!--

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<j:ApplicationResponsiveView xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns:j="library://ns.apache.org/royale/jewel"
    xmlns:js="library://ns.apache.org/royale/basic"
    xmlns:html="library://ns.apache.org/royale/html"
    xmlns:local="*"
    >

    <fx:Script>
        <![CDATA[
            import org.apache.royale.events.Event;
            
            public var md:markdownit;

            public function initComplete(event:Event):void
            {
                md = new markdownit('commonmark', {
                    html:true, 
                    xhtmlOut: true,
                    breaks: true,
                    linkify: true,
                    typographer: true,
                    highlight: myHighlight
                });
                
                lab.html = md.render('# Marked in browser\n\nRendered by **marked**. Syntax highlighting\n ```js \n var foo = function (bar) { \n return bar++; \n }; \n console.log(foo(5));\n ```');
            }

            public function myHighlight(str:String, lang:String):String { 
                if (lang && hljs.getLanguage(lang))
                {
                    try {
                        return '<pre class="hljs"><code>' + hljs.highlight(lang, str, true).value + '</code></pre>';
                        // return hljs.highlight(lang, str).value;
                    } catch (error:Error) 
                    {

                    }
                }

                return ''; // use external default escaping
            }

            public function markDownComplete():void
            {
                trace("finished!!");
            }
        ]]>
    </fx:Script>

    <j:beads>
        <js:ContainerDataBinding/>
    </j:beads>

    <j:VContainer initComplete="initComplete(event)" width="400" height="400">
        <j:Label localId="lab" multiline="true"/>
    </j:VContainer>

</j:ApplicationResponsiveView>
