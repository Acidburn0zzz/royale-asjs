<?xml version="1.0" encoding="utf-8"?>
<!--

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<c:ExampleAndSourceCodeTabbedSectionContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:j="library://ns.apache.org/royale/jewel" 
	xmlns:html="library://ns.apache.org/royale/html" 
	xmlns:js="library://ns.apache.org/royale/basic"
	xmlns:models="models.*" 
	xmlns:c="components.*" sourceCodeUrl="DataGridPlayGround.mxml">
	
	<fx:Script>
		<![CDATA[
        import models.ListsModel;
        import models.ProductModel;

        import org.apache.royale.collections.ArrayList;
        import org.apache.royale.jewel.supportClasses.datagrid.IDataGridPresentationModel;

        import vos.IconListVO;
        import vos.Product;
        import org.apache.royale.jewel.DataGrid;

        private function dataGridProductChange(grid:DataGrid, output:Label) : void
		{
			output.text = "Clicked on row " + grid.selectedIndex + " (Title: " + (grid.selectedItem as Product).title + ")";
		}
        
		private function dataGridIconListChange(grid:DataGrid, output:Label) : void
		{
			output.text = "Clicked on row " + grid.selectedIndex + " (Label: " + (grid.selectedItem as IconListVO).label + ")";
		}

		private function refreshGrid(grid:DataGrid, data:ArrayList):void
		{
			grid.dataProvider = null;
			grid.dataProvider = data;
		}

		private function addRow():void
		{
			var product:Product = new Product("xx100","New Item", 44, Math.floor(Math.random()*1000), "assets/smallbluerect.jpg");
			(datagrid2.dataProvider as ArrayList).addItem(product);
			// productModel.productList.addItem(product);
		}
		
		private function removeFirstRow():void
		{
			(datagrid2.dataProvider as ArrayList).removeItemAt(0);
			// productModel.productList.removeItemAt(0);
		}
		
		private function updateFirstRow():void
		{
			var product:Product = productModel.productList.getItemAt(0) as Product;
			product.title = "What??";
			product.sales = Math.floor(Math.random()*100);
			(datagrid2.dataProvider as ArrayList).itemUpdated(product);
			// productModel.productList.itemUpdated(product);
		}

		public function removeAllRows():void
		{
			(datagrid2.dataProvider as ArrayList).removeAll();
			// productModel.productList.removeAll();
		}

		private function describeItem(item:*):String {
			const intro:String = "<strong>DataGrid selectedItem:</strong> ";
			var evaluated:String;
			if (item is String) {
				evaluated = "String value: '" + item + "'";
			} else {
				if (item === null || item === undefined) {
					evaluated = "Nothing Selected";
				}
				else {
					if (item is IconListVO) {
						evaluated = "Object's label field: '" + IconListVO(item).label + "'";
					} else {
						evaluated = "Object : " + item;
					}
				}
			}
			return intro + evaluated;
		}

		[Bindable]
		public var listModel:ListsModel = new ListsModel();

		/**
		 * DataGridColumnLabelsChange nead needed
		 */
		public function changeColumnNames():void
		{
			var pm:IDataGridPresentationModel = datagrid.presentationModel as IDataGridPresentationModel;
			pm.columnLabels = ["Imgs", "Names", "Cost"];
		}

		private function loadSmallData():void
		{
			productModel.fewProductList = new ArrayList([
				new Product("rz302","New",80,105,"assets/smallyellowrect.jpg"),
				new Product("dh442","Records",10,340,"assets/smallredrect.jpg"),
				new Product("ps222","to show!",35,190,"assets/smallorangerect.jpg"),
				new Product("ps102",":-)",44,200,"assets/smallbluerect.jpg"),
			]);
			datagrid.dataProvider = productModel.fewProductList;
		}

		private function clearData():void
		{
			productModel.fewProductList = new ArrayList();
			datagrid.dataProvider = productModel.fewProductList;
		}
		
		private function clearDataProvider(datagrid:DataGrid):void
		{
			datagrid.dataProvider = null;
		}
		
		private function loadDataProvider(datagrid:DataGrid):void
		{
			datagrid.dataProvider = new ArrayList([
				new Product("rz302","New",80,105,"assets/smallyellowrect.jpg"),
				new Product("dh442","Records",10,340,"assets/smallredrect.jpg"),
				new Product("ps222","to show!",35,190,"assets/smallorangerect.jpg"),
				new Product("ps102",":-)",44,200,"assets/smallbluerect.jpg"),
			]);
		}
		]]>
	</fx:Script>

	<c:model>
		<models:ProductModel localId="productModel"/>
	</c:model>
	
	<c:beads>
		<js:ContainerDataBinding/>
	</c:beads>

	<j:Grid gap="true" itemsVerticalAlign="itemsSameHeight">
		<j:beads>
			<j:Paddings paddingTop="0" paddingLeft="50" paddingRight="50" paddingBottom="50"/>
		</j:beads>

		<c:ExampleHeader title="Jewel DataGrid">
			<c:description>
				<![CDATA[<b>Jewel DataGrid</b> examples.]]>
			</c:description>
		</c:ExampleHeader>

		<j:GridCell desktopNumerator="1" desktopDenominator="2" tabletNumerator="1" tabletDenominator="2" phoneNumerator="1" phoneDenominator="1">
			<j:Card>
				<j:CardHeader>
					<html:H3 text="Default" className="primary-normal"/>
				</j:CardHeader>
				<j:CardPrimaryContent>
					<j:Label multiline="true">
						<j:html><![CDATA[<p>No configuration, default <i>width</i>, <i>height</i>, no <i>columnWidth</i> or <i>rowHeight</i>, and no default <i>dataProvider</i>.</p>]]></j:html>
					</j:Label>
					
					<j:DataGrid localId="dg1" change="lb1.html = describeItem(event.target.selectedItem)">
						<j:columns>
							<j:DataGridColumn label="Title" dataField="title"/>
							<j:DataGridColumn label="Sales" dataField="sales"/>
						</j:columns>
					</j:DataGrid>

					<j:Label localId="lb1" html="DataGrid selection will be shown here"/>
				</j:CardPrimaryContent>
				<j:CardActions itemsHorizontalAlign="itemsRight">
					<j:IconButton click="clearDataProvider(dg1)" outlined="true">
						<j:beads>
							<j:ToolTip toolTip="Clear Data"/>
						</j:beads>
						<j:icon>
							<js:FontIcon text="{MaterialIconType.CLEAR}" material="true"/>
						</j:icon>
					</j:IconButton>
					<j:IconButton click="loadDataProvider(dg1)" emphasis="primary" outlined="true">
						<j:beads>
							<j:ToolTip toolTip="Load Data"/>
						</j:beads>
						<j:icon>
							<js:FontIcon text="{MaterialIconType.VIEW_HEADLINE}" material="true"/>
						</j:icon>
					</j:IconButton>
				</j:CardActions>
			</j:Card>
		</j:GridCell>
		
		<j:GridCell desktopNumerator="1" desktopDenominator="2" tabletNumerator="1" tabletDenominator="2" phoneNumerator="1" phoneDenominator="1">
			<j:Card height="400">
				<j:CardHeader>
					<html:H3 text="Percentage Width and Height" className="primary-normal"/>
				</j:CardHeader>
				<j:CardPrimaryContent>
					<j:Label multiline="true">
						<j:html><![CDATA[<p><i>width</i> and <i>height</i> set to 100%, no <i>columnWidth</i> or <i>rowHeight</i>, and default <i>dataProvider</i>.<br>Note: this card need to set <i>height</i> so datagrid 100% could work)</p>]]></j:html>
					</j:Label>
					
					<j:DataGrid localId="dg2" width="100%" height="100%" 
								dataProvider="{productModel.productList}"
								change="lb2.html = describeItem(event.target.selectedItem)">
						<j:beads>
							<j:DataGridColumnLabelsChange/>
						</j:beads>
						<j:columns>
							<j:DataGridColumn label="Title" dataField="title"/>
							<j:DataGridColumn label="Sales" dataField="sales"/>
						</j:columns>
					</j:DataGrid>

					<j:Label localId="lb2" html="DataGrid selection will be shown here"/>
				</j:CardPrimaryContent>
				<j:CardActions itemsHorizontalAlign="itemsRight">
					<j:IconButton click="clearDataProvider(dg2)" outlined="true">
						<j:beads>
							<j:ToolTip toolTip="Clear Data"/>
						</j:beads>
						<j:icon>
							<js:FontIcon text="{MaterialIconType.CLEAR}" material="true"/>
						</j:icon>
					</j:IconButton>
					<j:IconButton click="loadDataProvider(dg2)" emphasis="primary" outlined="true">
						<j:beads>
							<j:ToolTip toolTip="Load Data"/>
						</j:beads>
						<j:icon>
							<js:FontIcon text="{MaterialIconType.VIEW_HEADLINE}" material="true"/>
						</j:icon>
					</j:IconButton>
				</j:CardActions>
			</j:Card>
		</j:GridCell>


		<j:GridCell desktopNumerator="1" desktopDenominator="2" tabletNumerator="1" tabletDenominator="2" phoneNumerator="1" phoneDenominator="1">
			<j:Card height="600">
				<j:CardHeader>
					<html:H3 text="Jewel DataGrid" className="primary-normal"/>
				</j:CardHeader>
				<j:CardPrimaryContent>
					<j:Label multiline="true">
						<j:html><![CDATA[<p>Basic configuration, default width, no column widths, no rowHeight. First column uses a custom renderer.</p>]]></j:html>
					</j:Label>

					<j:DataGrid localId="datagrid" height="100%"
						change="dataGridProductChange(event.target as DataGrid, lb3)"
						dataProvider="{productModel.fewProductList}">
						<j:beads>
							<j:DataGridColumnLabelsChange/>
						</j:beads>
						<j:columns>
							<j:DataGridColumn label="Images" dataField="image" 
											itemRenderer="itemRenderers.ImageDataGridItemRenderer"/>
							<j:DataGridColumn label="Title" dataField="title"/>
							<j:DataGridColumn label="Sales" dataField="sales"/>
						</j:columns>
					</j:DataGrid>

					<j:Label localId="lb3" text="DataGrid selection will be shown here"/>
				</j:CardPrimaryContent>
				<j:CardActions itemsHorizontalAlign="itemsRight">
					<j:IconButton click="changeColumnNames()" outlined="true">
						<j:beads>
							<j:ToolTip toolTip="Change Column Labels"/>
						</j:beads>
						<j:icon>
							<js:FontIcon text="{MaterialIconType.RESTORE_PAGE}" material="true"/>
						</j:icon>
					</j:IconButton>
					<j:IconButton click="clearData()" outlined="true">
						<j:beads>
							<j:ToolTip toolTip="Clear Data"/>
						</j:beads>
						<j:icon>
							<js:FontIcon text="{MaterialIconType.CLEAR_ALL}" material="true"/>
						</j:icon>
					</j:IconButton>
					<j:IconButton click="loadSmallData()" emphasis="primary" outlined="true">
						<j:beads>
							<j:ToolTip toolTip="Load Data"/>
						</j:beads>
						<j:icon>
							<js:FontIcon text="{MaterialIconType.AUTORENEW}" material="true"/>
						</j:icon>
					</j:IconButton>
				</j:CardActions>
			</j:Card>
		</j:GridCell>
		
		<j:GridCell desktopNumerator="1" desktopDenominator="2" tabletNumerator="1" tabletDenominator="2" phoneNumerator="1" phoneDenominator="1">
			<j:Card>
				<j:CardHeader>
					<html:H3 text="Jewel DataGrid" className="primary-normal"/>
				</j:CardHeader>
				<j:CardPrimaryContent>
					<j:Label text="Using specific column widths, rowHeight=54 and height=220, first column uses a custom renderer and last column has right alignment"
						multiline="true"/>

					<j:DataGrid localId="datagrid2" height="205"
						rowHeight="54" emphasis="primary" 
						change="dataGridProductChange(event.target as DataGrid, datagrid2_lb)"
						dataProvider="{productModel.productList}">
						<j:columns>
							<j:DataGridColumn label="Images" dataField="image" columnWidth="100" 
											itemRenderer="itemRenderers.ImageDataGridItemRenderer"/>
							<j:DataGridColumn label="Title" dataField="title" columnWidth="140"/>
							<j:DataGridColumn label="Sales" dataField="sales" columnWidth="80" align="right"/>
						</j:columns>
						<j:beads>
							<j:AddDataGridItemRendererForArrayListData/>
							<j:RemoveDataGridItemRendererForArrayListData/>
							<j:UpdateDataGridItemRendererForArrayListData/>
							<j:RemoveAllDataGridItemRendererForArrayListData/>
						</j:beads>
					</j:DataGrid>
					<j:Label localId="datagrid2_lb" text="DataGrid selection will be shown here"/>
					<j:Label html="{'Selected Index: ' + datagrid2.selectedIndex}"/>
					<j:Label localId="selected" html="{describeItem(datagrid2.selectedItem)}"/>
					</j:CardPrimaryContent>
				<j:CardActions itemsHorizontalAlign="itemsRight">
					<j:IconButton click="addRow()" outlined="true">
						<j:beads>
							<j:ToolTip toolTip="Add Row"/>
						</j:beads>
						<j:icon>
							<js:FontIcon text="{MaterialIconType.ADD}" material="true"/>
						</j:icon>
					</j:IconButton>
					<j:IconButton click="removeFirstRow()" outlined="true">
						<j:beads>
							<j:ToolTip toolTip="Remove First Row"/>
						</j:beads>
						<j:icon>
							<js:FontIcon text="{MaterialIconType.REMOVE}" material="true"/>
						</j:icon>
					</j:IconButton>
					<j:IconButton click="updateFirstRow()" emphasis="primary" outlined="true">
						<j:beads>
							<j:ToolTip toolTip="Update First Row"/>
						</j:beads>
						<j:icon>
							<js:FontIcon text="{MaterialIconType.UPDATE}" material="true"/>
						</j:icon>
					</j:IconButton>
					<j:IconButton click="removeAllRows()" emphasis="primary" outlined="true">
						<j:beads>
							<j:ToolTip toolTip="Remove all rows"/>
						</j:beads>
						<j:icon>
							<js:FontIcon text="{MaterialIconType.DELETE_FOREVER}" material="true"/>
						</j:icon>
					</j:IconButton>
				</j:CardActions>
			</j:Card>
		</j:GridCell>
	
		<j:GridCell desktopNumerator="1" desktopDenominator="2" tabletNumerator="1" tabletDenominator="2" phoneNumerator="1" phoneDenominator="1">
			<j:Card>
				<html:H3 text="Jewel DataGrid"/>
				
				<j:Label text="Basic configuration, width = 100%, no column widths, rowHeight=42 and emphasis='secondary', middle column has center alignment. Clicking on row icon, remove the entire row."
					multiline="true"/>

				<j:DataGrid width="100%" emphasis="secondary" rowHeight="42"
					change="dataGridIconListChange(event.target as DataGrid, datagrid3_lb)">
					<j:beads>
						<js:ConstantBinding
							sourceID="listModel"
							sourcePropertyName="iconDetailListData"
							destinationPropertyName="dataProvider"/>
						<j:RemoveDataGridItemRendererForArrayListData/>
					</j:beads>
					<j:columns>
						<j:DataGridColumn label="Icon" 
										itemRenderer="itemRenderers.IconDataGridItemRenderer"/>
						<j:DataGridColumn label="Label" dataField="label" align="center"/>
						<j:DataGridColumn label="Is Jewel?"
										itemRenderer="itemRenderers.CheckBoxDataGridItemRenderer"/>
					</j:columns>
				</j:DataGrid>

				<j:Label localId="datagrid3_lb" text="DataGrid selection will be shown here"/>
			</j:Card>
		</j:GridCell>
		
		<j:GridCell desktopNumerator="1" desktopDenominator="2" tabletNumerator="1" tabletDenominator="2" phoneNumerator="1" phoneDenominator="1">
			<j:Card>
				<html:H3 text="Jewel DataGrid"/>
				
				<j:Label text="Using specific column widths, rowHeight=40 and emphasis='emphasized'"
					multiline="true"/>

				<j:DataGrid localId="datagrid4" height="246"
					rowHeight="40" emphasis="emphasized" 
					change="dataGridIconListChange(event.target as DataGrid, datagrid4_lb)"
					dataProvider="{listModel.iconListData}">
					<j:columns>
						<j:DataGridColumn label="Icon" dataField="icon" columnWidth="90" 
											itemRenderer="itemRenderers.IconDataGridItemRenderer"/>
						<j:DataGridColumn label="Label" dataField="label" columnWidth="200"/>
					</j:columns>
				</j:DataGrid>

				<j:Label localId="datagrid4_lb" text="DataGrid selection will be shown here"/>
				<j:Button text="Refresh Grid" click="refreshGrid(datagrid4, (listModel as ListsModel).iconListData)" emphasis="primary"/>
			</j:Card>
		</j:GridCell>
		
	</j:Grid>

</c:ExampleAndSourceCodeTabbedSectionContent>
