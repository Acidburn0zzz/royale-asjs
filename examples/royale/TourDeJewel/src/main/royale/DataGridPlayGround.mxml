<?xml version="1.0" encoding="utf-8"?>
<!--

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<c:ExampleAndSourceCodeTabbedSectionContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:j="library://ns.apache.org/royale/jewel" 
	xmlns:html="library://ns.apache.org/royale/html" 
	xmlns:js="library://ns.apache.org/royale/basic"
	xmlns:models="models.*" 
	xmlns:c="components.*" sourceCodeUrl="DataGridPlayGround.mxml">
	
	<fx:Script>
		<![CDATA[
        import models.ListsModel;
        import models.ProductModel;

        import org.apache.royale.collections.ArrayList;

        import vos.IconListVO;
        import vos.Product;

        private function dataGridProductChange(grid:DataGrid, output:Label) : void
		{
			output.text = "Clicked on row " + grid.selectedIndex + " (Title: " + (grid.selectedItem as Product).title + ")";
		}
        
		private function dataGridIconListChange(grid:DataGrid, output:Label) : void
		{
			output.text = "Clicked on row " + grid.selectedIndex + " (Label: " + (grid.selectedItem as IconListVO).label + ")";
		}

		private function refreshGrid(grid:DataGrid, data:ArrayList):void
		{
			grid.dataProvider = null;
			grid.dataProvider = data;
		}

		private function addRow():void
		{
			var product:Product = new Product("xx100","New Item",44,10,"assets/smallbluerect.jpg");
			productModel.productList.addItem(product);
		}
		
		private function removeFirstRow():void
		{
			productModel.productList.removeItemAt(0);
		}

		[Bindable]
		public var listModel:ListsModel = new ListsModel();
		]]>
	</fx:Script>

	<c:model>
		<models:ProductModel localId="productModel"/>
	</c:model>
	
	<c:beads>
		<js:ContainerDataBinding/>
	</c:beads>

	<j:Grid gap="true" itemsVerticalAlign="itemsSameHeight">
		<j:GridCell desktopNumerator="1" desktopDenominator="2" tabletNumerator="1" tabletDenominator="2" phoneNumerator="1" phoneDenominator="1">
			<j:Card>
				<html:H3 text="Jewel DataGrid"/>
				
				<j:Label text="Basic configuration, default width, no column widths, no rowHeight. First column uses a custom renderer."
						multiline="true"/>

				<j:DataGrid localId="datagrid"
					change="dataGridProductChange(event.target as DataGrid, datagrid_lb)">
					<j:beads>
						<js:ConstantBinding
							sourceID="productModel"
							sourcePropertyName="productList"
							destinationPropertyName="dataProvider"/>
					</j:beads>
					<j:columns>
						<j:DataGridColumn label="Images" dataField="image" 
										itemRenderer="itemRenderers.ImageDataGridItemRenderer"/>
						<j:DataGridColumn label="Title" dataField="title"/>
						<j:DataGridColumn label="Sales" dataField="sales"/>
					</j:columns>
				</j:DataGrid>

				<j:Label id="datagrid_lb" text="DataGrid selection will be shown here"/>
			</j:Card>
		</j:GridCell>
		
		<j:GridCell desktopNumerator="1" desktopDenominator="2" tabletNumerator="1" tabletDenominator="2" phoneNumerator="1" phoneDenominator="1">
			<j:Card>
				<html:H3 text="Jewel DataGrid"/>
				
				<j:Label text="Using specific column widths, rowHeight=54 and height=220, first column uses a custom renderer and last column has right alignment"
					multiline="true"/>

				<j:DataGrid localId="datagrid2" height="205"
					rowHeight="54" emphasis="primary" 
					change="dataGridProductChange(event.target as DataGrid, datagrid2_lb)"
					dataProvider="{productModel.productList}">
					<j:columns>
						<j:DataGridColumn label="Images" dataField="image" columnWidth="100" 
										itemRenderer="itemRenderers.ImageDataGridItemRenderer"/>
						<j:DataGridColumn label="Title" dataField="title" columnWidth="140"/>
						<j:DataGridColumn label="Sales" dataField="sales" columnWidth="80" align="right"/>
					</j:columns>
					<j:beads>
						<j:AddDataGridItemRendererForArrayListData/>
						<j:RemoveDataGridItemRendererForArrayListData/>
					</j:beads>
				</j:DataGrid>

				<j:Label id="datagrid2_lb" text="DataGrid selection will be shown here"/>

				<j:HGroup gap="3">
					<j:Button text="Add Row" click="addRow()" emphasis="primary"/>
					<j:Button text="Remove First Row" click="removeFirstRow()"/>
				</j:HGroup>
			</j:Card>
		</j:GridCell>
	
		<j:GridCell desktopNumerator="1" desktopDenominator="2" tabletNumerator="1" tabletDenominator="2" phoneNumerator="1" phoneDenominator="1">
			<j:Card>
				<html:H3 text="Jewel DataGrid"/>
				
				<j:Label text="Basic configuration, width = 100%, no column widths, rowHeight=42 and emphasis='secondary', last column has center alignment"
					multiline="true"/>

				<j:DataGrid width="100%" emphasis="secondary" rowHeight="42"
					change="dataGridIconListChange(event.target as DataGrid, datagrid3_lb)">
					<j:beads>
						<js:ConstantBinding
							sourceID="listModel"
							sourcePropertyName="iconDetailListData"
							destinationPropertyName="dataProvider"/>
					</j:beads>
					<j:columns>
						<j:DataGridColumn label="Icon" dataField="icon" 
											itemRenderer="itemRenderers.IconDataGridItemRenderer"/>
						<j:DataGridColumn label="Label" dataField="label"/>
						<j:DataGridColumn label="Set" dataField="componentSet" align="center"/>
					</j:columns>
				</j:DataGrid>

				<j:Label id="datagrid3_lb" text="DataGrid selection will be shown here"/>
			</j:Card>
		</j:GridCell>
		
		<j:GridCell desktopNumerator="1" desktopDenominator="2" tabletNumerator="1" tabletDenominator="2" phoneNumerator="1" phoneDenominator="1">
			<j:Card>
				<html:H3 text="Jewel DataGrid"/>
				
				<j:Label text="Using specific column widths, rowHeight=40 and emphasis='emphasized'"
					multiline="true"/>

				<j:DataGrid localId="datagrid4" height="246"
					rowHeight="40" emphasis="emphasized" 
					change="dataGridIconListChange(event.target as DataGrid, datagrid4_lb)"
					dataProvider="{listModel.iconListData}">
					<j:columns>
						<j:DataGridColumn label="Icon" dataField="icon" columnWidth="90" 
											itemRenderer="itemRenderers.IconDataGridItemRenderer"/>
						<j:DataGridColumn label="Label" dataField="label" columnWidth="200"/>
					</j:columns>
				</j:DataGrid>

				<j:Label id="datagrid4_lb" text="DataGrid selection will be shown here"/>
				<j:Button text="Refresh Grid" click="refreshGrid(datagrid4, (listModel as ListsModel).iconListData)" emphasis="primary"/>
			</j:Card>
		</j:GridCell>
		
	</j:Grid>

</c:ExampleAndSourceCodeTabbedSectionContent>
