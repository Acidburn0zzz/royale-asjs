<?xml version="1.0" encoding="utf-8"?>
<!--

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<j:SectionContent xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:j="library://ns.apache.org/royale/jewel"
		xmlns:js="library://ns.apache.org/royale/basic"
		xmlns:html="library://ns.apache.org/royale/html"
		xmlns:models="models.*">
    
    <fx:Script>
		<![CDATA[
			import org.apache.royale.collections.ArrayList;
			import vos.IconListVO;

			private function onChange(event:Event):void {
                selected.text = "Selected: " + list.selectedItem;
            }

            private var _simple:ArrayList = new ArrayList(["Blueberries", "Bananas", "Lemons", "Oranges", "Watermelons", "Apples", "Cherries", "Coconuts", "Figs", "Grapes", "Kiwis", "Mangos"]);

			public function get simple():ArrayList
			{
				return _simple
			}

			public function set simple(value:ArrayList):void
			{
				_simple = value;
			}

			public function assignNewData():void
			{
				list.dataProvider = new ArrayList(["blue", "red", "yellow", "green"]);
			}

			private function changeListData():void
			{
				iconList.dataProvider = new ArrayList([
					new IconListVO("CheckBox", "check_box"),
					new IconListVO("Label", "label"),
					new IconListVO("RadioButton", "radio_button_checked"),
					new IconListVO("Text", "subject"),
					new IconListVO("TextInput", "text_fields")            
				]);
			}

			private function addItem():void
			{
				var iconListVO:IconListVO = new IconListVO("New Item", MaterialIconType.CLOSE);
				
				(iconList.dataProvider as ArrayList).addItem(iconListVO);
				// listModel.iconListData.addItem(iconListVO); // to test things are adding to right place
			}

			public function removeItemAt():void
			{
				(iconList.dataProvider as ArrayList).removeItemAt(0);
			}

			public function updateFirstItem():void
			{
				var item:IconListVO = (iconList.dataProvider as ArrayList).getItemAt(0) as IconListVO;
				item.label = "What??";
				(iconList.dataProvider as ArrayList).itemUpdated(item);
			}

			public function removeAllData():void
			{
				(iconList.dataProvider as ArrayList).removeAll();
				// listModel.iconListData.removeAll();
			}
		]]>
	</fx:Script>

    <j:model>
        <models:ListsModel id="listModel"/>
	</j:model>

	<j:beads>
        <js:ContainerDataBinding/>
    </j:beads>

	<j:Grid gap="true" itemsVerticalAlign="itemsSameHeight">
		<j:GridCell desktopNumerator="1" desktopDenominator="2"
					tabletNumerator="1" tabletDenominator="2"
					phoneNumerator="1" phoneDenominator="1">
			<j:Card>
				<html:H3 text="Jewel List"/>
				<j:List id="list" width="200" height="300" change="onChange(event)">
					<j:beads>
						<js:ConstantBinding
							sourcePropertyName="simple"
							destinationPropertyName="dataProvider" />
					</j:beads>
				</j:List>
				<j:Label id="selected"/>
				<j:Button text="Assign new data" emphasis="{Button.PRIMARY}" click="assignNewData()"/>
			</j:Card>
		</j:GridCell>

		<j:GridCell desktopNumerator="1" desktopDenominator="2"
					tabletNumerator="1" tabletDenominator="2"
					phoneNumerator="1" phoneDenominator="1">
			<j:Card>
				<html:H3 text="Jewel List With ItemRenderer"/>
				<j:List id="iconList" width="200" height="300" className="iconListItemRenderer">
					<j:beads>
						<js:ConstantBinding
							sourceID="listModel"
							sourcePropertyName="iconListData"
							destinationPropertyName="dataProvider" />
						<j:AddListItemRendererForArrayListData/>
						<j:DynamicRemoveItemRendererForArrayListData/>
						<j:DynamicUpdateItemRendererForArrayListData/>
						<j:RemoveAllItemRendererForArrayListData/>
					</j:beads>
				</j:List>
				<j:Button text="change data" emphasis="{Button.PRIMARY}" click="changeListData()"/>
				<j:Button text="Add item" click="addItem()"/>
				<j:Button text="Remove first item" click="removeItemAt()"/>
				<j:Button text="Update first item" click="updateFirstItem()"/>
				<j:Button text="Remove all data" click="removeAllData()"/>
			</j:Card>
		</j:GridCell>
	</j:Grid>
	<j:Grid gap="true">
		<j:GridCell desktopNumerator="1" desktopDenominator="2"
					tabletNumerator="1" tabletDenominator="2"
					phoneNumerator="1" phoneDenominator="1">
			<j:Card>
				<html:H3 text="Jewel DataContainer"/>
				<j:DataContainer width="450">
					<j:beads>
						<j:HorizontalFlowLayout gap="3"/>
						<js:ConstantBinding
							sourcePropertyName="simple"
							destinationPropertyName="dataProvider" />
					</j:beads>
				</j:DataContainer>
			</j:Card>
		</j:GridCell>
		<j:GridCell desktopNumerator="1" desktopDenominator="2"
					tabletNumerator="1" tabletDenominator="2"
					phoneNumerator="1" phoneDenominator="1">
			<j:Card>
				<html:H3 text="Jewel List (Horizontal)"/>
				<j:List id="alist" percentWidth="100" height="100">  
				<j:beads>  
					<j:HorizontalLayout itemsExpand="true" />
				</j:beads>
				<j:dataProvider>
					<js:ArrayList id="avengersCharacters" source="[Iron Man, Hulk, Thor, Captain America, Hawkeye]" />
				</j:dataProvider>
			</j:List>
			</j:Card>
		</j:GridCell>
	</j:Grid>

</j:SectionContent>
