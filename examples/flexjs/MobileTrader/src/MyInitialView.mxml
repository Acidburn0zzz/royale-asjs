<?xml version="1.0" encoding="utf-8"?>
<!--

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<js:ViewBase xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:local="*"
				xmlns:js="library://ns.apache.org/flexjs/basic"
				xmlns:views="views.*" 
				xmlns:apache="org.apache.flex.html.beads.*"
				xmlns:html="org.apache.flex.html.*"
				xmlns:controller="controller.*"
				initComplete="onInitComplete()" xmlns:models="models.*" >
	
	<fx:Style>
		@namespace js  "library://ns.apache.org/flexjs/basic";
		@namespace views  "views.*";
		
		js|Container {
			background-color: #FFFFFF;
		}
		
		js|StackedViewManager {
			padding-top: 0px;
			padding-bottom: 0px;
			padding-left: 0px;
			padding-right: 0px;
		}
		
		js|TabbedViewManager {
			position : absolute ;
			height : 100% ;
			width : 100% ;
			left : 0px ;
			top : 0px ;
			border: solid 1px #444444;
			background-color: #FFFFFF;
		}
		
		.NavigationBar {
			background-image: url("assets/background.png");
			height: 55px;
			IBeadLayout: ClassReference("org.apache.flex.html.beads.layouts.HorizontalLayout");
		}
		
		.TabBar {
			background-color: #DEDEDE;
			height: 55px;
			vertical-align: middle;
			line-height: 55px;
		}
		
		.BackButton:hover {
			background-image: url('assets/arrow_left_24.png');
		}
		
		.BackButton:active {
			background-image: url('assets/arrow_left_24.png');
		}
		
		.BackButton {
			background-image: url('assets/arrow_left_24.png');
		}
		
		.AssetsInner {
			padding-top: 5px;
			background-color: #FFFFFF;
		}
		
		views|AssetsView {
			width: 100%;
			height: 100%;
		}
		
		views|WatchListView {
			width: 100%;
			height: 100%;
			IBeadController:ClassReference('controller.WatchListController');
			background-color: #FFFFFF;
		}
		
		.WatchListInner {
			height: 480px;
			width:  100%;
			background-color: #FFFFFF;
		}
		
		.WatchListDataGrid {
			height: 480px;
			width:  100%;
		}
		
		.WatchListInputArea {
			background-color: #FFFFFF;
			width: 480px;
			height: 25px;
			padding-top: 5px;
			padding-bottom: 2px;
		}
		
		views|StockView {
			width: 100%;
			height: 100%;
		}
		
		views|AlertsView {
			width: 100%;
			height: 100%;
			IBeadController:ClassReference('controller.AlertsViewController');
		}
		
		.redCell {
			color: #FF0000;
		}
		
		.greenCell {
			color: #00FF00;
		}
		
		.ViewTitle {
			font-size: 18pt;
			font-weight: bold;
			padding: 10pt;
		}
		
		.StockName {
			font-size: 14pt;
			font-weight: normal;
			padding: 10pt;
		}
		
		.StockDetailArea {
			padding: 10pt;
		}
		
		.StockLabel {
			font-size: 18pt;
			font-weight: normal;
			color: #2255DD;
		}
		
		.StockRemoveButton {
			background-color: #FF5522;
			font-size: 16pt;
			font-weight: bold;
			color: #FFFFFF;
			width: 200px;
			height: 50px;
		}
		
		.StockRemoveButton:hover {
			background-color: #DD3300;
		}
		
		.StockValue {
			font-size: 18pt;
			font-weight: normal;
			color: #999999;
		}
		
		@media -flex-flash
		{
			.NavigationBar {
				IBackgroundBead: ClassReference("org.apache.flex.html.beads.BackgroundImageBead");
			}
		}
		
	</fx:Style>
	
	<fx:Script>
		<![CDATA[
			import org.apache.flex.core.IBeadController;
			import org.apache.flex.core.IBeadModel;
			import org.apache.flex.events.Event;
			import org.apache.flex.mobile.IView;
			import org.apache.flex.mobile.IViewManager;
			import org.apache.flex.mobile.chrome.NavigationBar;
			
			private function onInitComplete():void
			{
			}
			
			private function onAssetsNext():void
			{
				
			}
			
			private function tabbedViewChanged(event:org.apache.flex.events.Event):void
			{
				var manager:IViewManager = event.currentTarget as IViewManager;
				trace("TabbedViewChanged for "+manager);
			}
			
			private function watchListStackChanged(event:org.apache.flex.events.Event):void
			{
				trace("watchlist stack changed");
				var manager:StackedViewManager = event.currentTarget as StackedViewManager;
				
				var currentView:IView = manager.selectedView;
				backButton.visible = manager.views.length > 1;
			}
			
			private function goBack(event:org.apache.flex.events.MouseEvent):void
			{
				if (navController.selectedIndex == 1) {
					watchListStack.pop();
				}
			}
		]]>
	</fx:Script>
	
	<js:beads>
		<js:ViewBaseDataBinding />
	</js:beads>
	
	<js:TabbedViewManager id="navController" width="100%" height="100%" x="0" y="0" viewChanged="tabbedViewChanged(event)">
		<js:navigationBarItems>
			<js:TextButton id="backButton" width="45" height="45" className="BackButton" visible="false" click="goBack(event)">
				<js:beads>
					<apache:ImageButtonView />
				</js:beads>
			</js:TextButton>
			<js:Image source="assets/logo.png" width="218" height="55" />
		</js:navigationBarItems>
		<js:views>
			<js:StackedViewManager title="Assets">
				<js:views>
					<views:AssetsView id="assetsView" title="Assets" next="onAssetsNext()" />
				</js:views>
			</js:StackedViewManager>
			
			<js:StackedViewManager id="watchListStack" title="Watch List" viewChanged="watchListStackChanged(event)">
				<js:views>
					<views:WatchListView id="watchListView" dataModel="{applicationModel}"/>
				</js:views>
			</js:StackedViewManager>
			
			<views:AlertsView id="alertsView" title="Alerts" dataModel="{applicationModel}" />
		</js:views>
	</js:TabbedViewManager>
	
</js:ViewBase>
